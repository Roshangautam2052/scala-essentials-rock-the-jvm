[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/roshan.gautam/Desktop/Developer-Journey/scala-essentials-rock-the-jvm/scala-essentials-rock-the-jvm/target/scala-3.3.5/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/roshan.gautam/Desktop/Developer-Journey/scala-essentials-rock-the-jvm/scala-essentials-rock-the-jvm/target/scala-3.3.5/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CounterClass$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Dog1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Adult.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	UnderFlowException$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBeNot.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	GreetingFunction$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Writer.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Inputs.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyMap.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Counter.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValuesVariablesTypes$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Dog.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBe.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyList.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBeNot$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Animal.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$InvariantList.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	OOBasics.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just$MayBeTest$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Cage.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	NovelAndWriter.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FibonacciCalculator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Cons$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Inputs$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FactorialCalculator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	UnderFlowException.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyList.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Empty$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Expressions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FactorialCalculator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Cat.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$3.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Cat.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MapFlatmapFilterFor$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	PrimeNumberFinder$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValuesVariablesTypes.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculationException$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CounterClass.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Carnivore.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	PrimeNumberFinder.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculationException.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$Animal.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	OOBasics$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MapFlatmapFilterFor.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	HOFsCurries.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Cons.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$Person$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Animal.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$Person$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions$MyExceptions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Trainer.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner$RunCalculator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyFunction.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	JavaPlayground.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Crocodile.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Novel.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$Person$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	FibonacciCalculator$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Empty.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Dog.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyList$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractCalculator.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$CovariantList.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	OverFlowException$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Dog.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	OverFlowException.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$UnitedKingdom$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	HOFsCurries$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Car.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Expressions$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Animal.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	GreetingFunction.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functions.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Herbivores.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations$Person.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	NovelAndWriter$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CounterClass$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Dog1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Adult.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	UnderFlowException$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBeNot.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	GreetingFunction$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Writer.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Inputs.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyMap.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Counter.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValuesVariablesTypes$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Dog.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBe.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyList.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MayBeNot$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Animal.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$InvariantList.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	OOBasics.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just$MayBeTest$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$2.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Cage.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	NovelAndWriter.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FibonacciCalculator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Cons$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Inputs$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FactorialCalculator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	UnderFlowException.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyList.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	WhatsAFunction$$anon$3.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Empty$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	StringConcatenator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Expressions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FactorialCalculator$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Cat.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$$anon$3.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Cat.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MapFlatmapFilterFor$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Just.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	PrimeNumberFinder$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ValuesVariablesTypes.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculationException$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CounterClass.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Carnivore.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	PrimeNumberFinder.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MathCalculationException.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$Animal.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	OOBasics$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MapFlatmapFilterFor.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	HOFsCurries.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Cons.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FunctionTaker.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotationExercises$Person$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Animal.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$Person$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Exceptions$MyExceptions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$Permissions$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Trainer.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CalculatorRunner$RunCalculator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MyFunction.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	JavaPlayground.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Crocodile.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Novel.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Objects$Person$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	FibonacciCalculator$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Empty.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Dog.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$$anon$1.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$MyList$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractCalculator.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$CovariantList.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	OverFlowException$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	InheritanceAndTraits$Dog.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	OverFlowException.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	CaseClasses$UnitedKingdom$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	HOFsCurries$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Car.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousFunction$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Expressions$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Generics$Animal.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	GreetingFunction.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Functions.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AbstractDataTypes$Herbivores.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	ListTest$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	MethodNotations$Person.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	AnonymousClasses$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	NovelAndWriter$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	Enums$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /Users/roshan.gautam/Desktop/Developer-Journey/scala-essentials-rock-the-jvm/scala-essentials-rock-the-jvm/target/scala-3.3.5/classes.bak[0m
